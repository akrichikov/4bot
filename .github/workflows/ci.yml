name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel setuptools
          # Install ptyterm from submodule
          if [ -d submodules/ptyterm ]; then pip install -e submodules/ptyterm; fi
          pip install -e .[dev]
      - name: Ruff (lint)
        run: ruff . --output-format=github
      - name: Black (format check)
        run: black --check .
      - name: pre-commit (hooks)
        run: |
          pip install pre-commit
          pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel setuptools
          # Install ptyterm from submodule
          if [ -d submodules/ptyterm ]; then pip install -e submodules/ptyterm; fi
          pip install -e .[dev]
      - name: Install Playwright (optional)
        run: |
          python -m playwright install chromium
          python -m playwright install-deps || true
      - name: Run tests (non-live)
        run: pytest -q -k "not browser_cookie_test and not live and not rabbitmq"
      - name: Run hygiene guard tests
        run: make hygiene
      - name: Guardrails (/Users/ in scripts/apps/xbot)
        run: |
          set -e
          rg -n '/Users/' scripts --no-messages -g '!scripts/manual/**' && { echo 'Found /Users/ in scripts'; exit 1; } || true
          rg -n '/Users/' apps xbot --no-messages && { echo 'Found /Users/ in python code'; exit 1; } || true
      - name: Guardrails (sensitive tokens printed)
        run: |
          set -e
          rg -n "print\(.*(auth_token|ct0|kdt|att|password)" xbot apps scripts --no-messages -g '!scripts/manual/**' && { echo 'Suspicious prints detected'; exit 1; } || true
      - name: Guardrails (ban /tmp usage)
        run: |
          set -e
          rg -n '/tmp/' apps xbot scripts chrome_profiles --no-messages -g '!scripts/manual/**' && { echo 'Found /tmp usage'; exit 1; } || true
      - name: Build status site (best-effort)
        continue-on-error: true
        run: |
          make site || true
      - name: Paths doctor (best-effort)
        continue-on-error: true
        run: |
          make paths-doctor || true
      - name: Paths validate (best-effort)
        continue-on-error: true
        run: |
          make paths-validate || true
      - name: Generate system health (best-effort)
        continue-on-error: true
        run: |
          make system-health || true
      - name: Upload Docs/status as artifact for Pages
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: xbot-reports
          path: Docs/status
